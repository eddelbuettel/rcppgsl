// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppGSL.h"
#include "../inst/include/RcppGSL_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fastLm
Rcpp::List fastLm(const RcppGSL::Matrix& X, const RcppGSL::Vector& y);
RcppExport SEXP _RcppGSL_fastLm(SEXP XSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppGSL::Matrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const RcppGSL::Vector& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(fastLm(X, y));
    return rcpp_result_gen;
END_RCPP
}
// gslSetErrorHandlerOff
bool gslSetErrorHandlerOff();
RcppExport SEXP _RcppGSL_gslSetErrorHandlerOff() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(gslSetErrorHandlerOff());
    return rcpp_result_gen;
END_RCPP
}
// gslResetErrorHandler
bool gslResetErrorHandler();
RcppExport SEXP _RcppGSL_gslResetErrorHandler() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(gslResetErrorHandler());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppGSL_fastLm", (DL_FUNC) &_RcppGSL_fastLm, 2},
    {"_RcppGSL_gslSetErrorHandlerOff", (DL_FUNC) &_RcppGSL_gslSetErrorHandlerOff, 0},
    {"_RcppGSL_gslResetErrorHandler", (DL_FUNC) &_RcppGSL_gslResetErrorHandler, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppGSL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
