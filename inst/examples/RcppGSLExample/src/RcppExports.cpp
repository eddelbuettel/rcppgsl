// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// colNorm
Rcpp::NumericVector colNorm(const RcppGSL::Matrix& G);
RcppExport SEXP _RcppGSLExample_colNorm(SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppGSL::Matrix& >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(colNorm(G));
    return rcpp_result_gen;
END_RCPP
}
// colNorm_old2
Rcpp::NumericVector colNorm_old2(Rcpp::NumericMatrix M);
RcppExport SEXP _RcppGSLExample_colNorm_old2(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(colNorm_old2(M));
    return rcpp_result_gen;
END_RCPP
}
// colNorm_old3
Rcpp::NumericVector colNorm_old3(RcppGSL::matrix<double> G);
RcppExport SEXP _RcppGSLExample_colNorm_old3(SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppGSL::matrix<double> >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(colNorm_old3(G));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP colNorm_old(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_RcppGSLExample_colNorm", (DL_FUNC) &_RcppGSLExample_colNorm, 1},
    {"_RcppGSLExample_colNorm_old2", (DL_FUNC) &_RcppGSLExample_colNorm_old2, 1},
    {"_RcppGSLExample_colNorm_old3", (DL_FUNC) &_RcppGSLExample_colNorm_old3, 1},
    {"colNorm_old", (DL_FUNC) &colNorm_old, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppGSLExample(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
